<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
    <!--현재 섹션 그룹과 섹션명을 맞춘 Config를 밑에 정확히 선언해놔야 읽을수 있다.-->
    <!--Log4net, IBatisNet.Common, IBatisNet.Common.Logging.Log4Net, IBatis.DataMapper, Common.Logging, Common.Logging.Log4Net이 참조되어 있어야 한다.-->
    <sectionGroup name="iBATIS">
      <section name="logging" type="IBatisNet.Common.Logging.ConfigurationSectionHandler,IBatisNet.Common" requirePermission="false" />
      <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler,Log4net" requirePermission="false" />
    </sectionGroup>
  </configSections>
  <appSettings>
    <!--Webpage 옵션은 MVC 버전을 담당함 1.0.0.0 = 3 , 2.0.0.0 = 4 3.0.0.0 = 5-->
    <add key="webpages:Version" value="2.0.0.0" />
    <!-- Submit 폼 검증 방식 사용 여부 -->
    <add key="ClientValidationEnabled" value="true" />
    <add key="UnobtrusiveJavaScriptEnabled" value="true" />
    <add key="LoginUrl" value="~/Home/Index"/>
  </appSettings>
  <iBATIS>
    <logging>
      <!-- Mybatis Logging 사용 FA-->
      <logFactoryAdapter type="IBatisNet.Common.Logging.Impl.Log4NetLoggerFA,IBatisNet.Common.Logging.Log4Net">
        <arg key="configType" value="inline" />
      </logFactoryAdapter>
    </logging>
    <log4net>
      <!--Console 창에서 로깅 나오는 Appender-->
      <!--<appender name="ConsoleAppender" type="log4net.Appender.ConsoleAppender">
      <layout type="log4net.Layout.PatternLayout">
        Logging Layout 결정 Threading 환경일 경우 Logging을 나누기 위해서 %Thread 지정-->
      <!--<conversionPattern value="%date %level %logger - %message%newline" />
      </layout>
    </appender>-->
      <!--File로 Logging 하는 Appender-->
      <appender name="RollingLogFileAppender" type="log4net.Appender.RollingFileAppender">
        <!--Logging 인코딩 설정-->
        <encoding value="utf-8" />
        <!-- 로깅 필터링 설정 Level같은 설정이나 간혹 테스트용으로 사용시 해당 Logging 지정
      <filter type="log4net.Filter.LevelRangeFilter">
        <acceptOnMatch value="true" />
        <levelMin value="DEBUG" />
      </filter>-->
        <file type="log4net.Util.PatternString" value=".\Logs\VisitorSystem.log" />
        <appendToFile value="true" />
        <rollingStyle value="Date" />
        <datePattern value="yyyy-MM-dd" />
        <preserveLogFileNameExtension value="true" />
        <layout type="log4net.Layout.PatternLayout">
          <!--로깅 유실의 문제점이 있는 설정이니 왠만하면 쓰지 말것. 한 로깅에 여러프로세스가 같이 써야할 경우 지정
       서로 다른 서버환경에서 네트워크드라이브로 사용할 경우 이 설정은 문제를 자주 일으킴
        <lockingModel type="log4net.Appender.FileAppender+MinimalLock"/>-->
          <conversionPattern value="[%d][%-5level] %m%n" />
        </layout>
      </appender>
      <root>
        <!--Log Leveling 결정 ALL,DEBUG,INFO,WARN,ERROR,FATAL,OFF -->
        <!-->으로 갈수록 하위레벨이며 하위레벨을 선택시 상위레벨은 더이상 로깅되지 않음-->
        <level value="ALL" />
        <!--Log File을 늘리려면 Appender를 참조하게 Root에서 선언-->
        <appender-ref ref="RollingLogFileAppender" />
      </root>
      <logger name="IBatisNet.DataMapper.Commands.DefaultPreparedCommand">
        <level value="DEBUG" />
      </logger>
      <logger name="IBatisNet.DataMapper.Configuration.Cache.CacheModel">
        <level value="OFF" />
      </logger>
      <logger name="IBatisNet.DataMapper.LazyLoadList">
        <level value="ALL" />
      </logger>
      <logger name="IBatisNet.DataMapper.SqlMapSession">
        <level value="OFF" />
      </logger>
      <logger name="IBatisNet.Common.Transaction.TransactionScope">
        <level value="OFF" />
      </logger>
      <logger name="IBatisNet.DataAccess.DaoSession">
        <level value="OFF" />
      </logger>
      <logger name="IBatisNet.DataAccess.Configuration.DaoProxy">
        <level value="OFF" />
      </logger>
      <logger name="IBatisNet.DataMapper.Configuration.Statements.PreparedStatementFactory">
        <level value="OFF" />
      </logger>
      <logger name="IBatisNet.DataMapper.Commands.IPreparedCommand">
        <level value="ALL" />
      </logger>
    </log4net>
  </iBATIS>
  <system.web>
    <roleManager enabled="true" />
    <!-- 배포시 Debug False로 둘것.-->
    <compilation debug="true" targetFramework="4.0"></compilation>
        <sessionState timeout="60" />
    <customErrors mode="Off" defaultRedirect="~/Home/Error" />
  </system.web>
  <system.webServer>
    <validation validateIntegratedModeConfiguration="false" />
    <modules runAllManagedModulesForAllRequests="true" />
        <!--디렉토리 검색이 가능하게 할 경우 보안 취악점으로 사용된다.-->
        <directoryBrowse enabled="false" />
         <httpProtocol>
            <customHeaders>
                <!--Server 헤더는 어떤 Was를 쓰고 있는지 버전은 뭔지 알려주므로 보안 취약점으로 이용됨. Server: Microsoft-IIS/10.0-->
                <remove name="Server" />
                <!--X-Powered-By 헤더는 서버가 어떤것으로 개발되어있는지 확인이 가능한 헤더이므로 불필요하며 보안 위협이 있음 X-Powered-By: ASP.NET-->
                <remove name="x-powered-by" />
                <add name="X-UA_Compatible" value="IE=Edge" />
            </customHeaders>
        </httpProtocol>
        <httpErrors>
          <!--400 잘못된 요청, 401 권한없음, 403 Forbidden, 404 Not Found, 405 Deny Method 408 Server Timeout 500 Internal Error-->
          <remove statusCode="400" subStatusCode="-1" />
          <error statusCode="400" prefixLanguageFilePath="" path="/Home/Error" responseMode="ExecuteURL" />
          <remove statusCode="401" subStatusCode="-1" />
          <error statusCode="401" prefixLanguageFilePath="" path="/Home/Error" responseMode="ExecuteURL" />
          <remove statusCode="403" subStatusCode="-1" />
          <error statusCode="403" prefixLanguageFilePath="" path="/Home/Error" responseMode="ExecuteURL" />
          <remove statusCode="404" subStatusCode="-1" />
          <error statusCode="404" prefixLanguageFilePath="" path="/Home/Error" responseMode="ExecuteURL" />
          <remove statusCode="405" subStatusCode="-1" />
          <error statusCode="405" prefixLanguageFilePath="" path="/Home/Error" responseMode="ExecuteURL" />
          <remove statusCode="408" subStatusCode="-1" />
          <error statusCode="408" prefixLanguageFilePath="" path="/Home/Error" responseMode="ExecuteURL" />
          <remove statusCode="500" subStatusCode="-1" />
          <error statusCode="500" prefixLanguageFilePath="" path="/Home/Error" responseMode="ExecuteURL" />
        </httpErrors>
  </system.webServer>
  <runtime>
    <!--Assembly 종속성 선언-->
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="IBatisNet.Common" publicKeyToken="ed781d9fc396c6ca" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-1.6.2.666" newVersion="1.6.2.666" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="IBatisNet.DataMapper" publicKeyToken="ed781d9fc396c6ca" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-1.6.2.666" newVersion="1.6.2.666" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="WebGrease" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-1.6.5135.21930" newVersion="1.6.5135.21930" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Newtonsoft.Json" publicKeyToken="30ad4fe6b2a6aeed" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-11.0.0.0" newVersion="11.0.0.0" />
      </dependentAssembly>
        <dependentAssembly>
      <assemblyIdentity name="System.Web.Helpers" publicKeyToken="31bf3856ad364e35" />
      <bindingRedirect oldVersion="1.0.0.0-2.0.0.0" newVersion="2.0.0.0" />
    </dependentAssembly>
    <dependentAssembly>
      <assemblyIdentity name="System.Web.Mvc" publicKeyToken="31bf3856ad364e35" />
      <bindingRedirect oldVersion="0.0.0.0-4.0.0.0" newVersion="4.0.0.0" />
    </dependentAssembly>
    <dependentAssembly>
      <assemblyIdentity name="System.Web.WebPages" publicKeyToken="31bf3856ad364e35" />
      <bindingRedirect oldVersion="1.0.0.0-2.0.0.0" newVersion="2.0.0.0" />
    </dependentAssembly>
    </assemblyBinding>
  </runtime>
</configuration>